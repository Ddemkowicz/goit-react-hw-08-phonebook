{"version":3,"file":"static/js/604.3a7f8469.chunk.js","mappings":"yMAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,kBCiDjC,EA9CoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXT,GAAWU,EAAAA,EAAAA,IAAYZ,GACvBS,GAASG,EAAAA,EAAAA,IAAYJ,GAErBK,EAAe,SAAAC,GACnB,IAAMC,EAAKD,EAAEE,cAAcC,QAAQF,GACnCL,GAASQ,EAAAA,EAAAA,IAAcH,GACxB,GAEDI,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,IAEJ,IAAMW,EAAiBnB,EAASO,QAAO,SAAAa,GAAO,OAC5CA,EAAQC,KAAKC,cAAcC,SAAShB,EAAOe,cADC,IAI9C,OACE,iCACE,sCACA,wBACGH,EAAeK,KAAI,SAAAJ,GAAO,OACzB,0BACGA,EAAQC,KADX,MACoBD,EAAQK,QAC1B,mBAAQC,QAASf,EAAcgB,KAAK,SAAS,UAASP,EAAQP,GAA9D,sBAFOO,EAAQP,GADQ,QAWlC,ECtCD,EAAwB,sB,SC8BxB,EAxBe,WACb,IAAMN,GAASG,EAAAA,EAAAA,IAAYJ,GACrBE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,oCACA,kBACEmB,UAAWC,EACXF,KAAK,OACLN,KAAK,SACLS,MAAOvB,EACPwB,SAbqB,SAAAnB,GACzB,IAAQkB,EAAUlB,EAAEE,cAAZgB,MACRtB,GAASwB,EAAAA,EAAAA,GAAUF,GACpB,EAWKG,YAAY,sBAInB,E,2BC5BD,EAA8B,iCAA9B,EAAuE,2BAAvE,EAA0G,2BAA1G,EAA8I,4BC+E9I,EAxEoB,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,CACnCb,KAAM,GACNI,OAAQ,KAFV,eAAOU,EAAP,KAAeC,EAAf,KAKMpC,GAAWU,EAAAA,EAAAA,IAAYZ,GAEvBU,GAAWC,EAAAA,EAAAA,MAEX4B,EAAe,SAAAzB,GACnBwB,GAAU,kBAAKD,GAAN,cAAevB,EAAE0B,OAAOjB,KAAOT,EAAE0B,OAAOR,QAClD,EAeD,OACE,kBAAMS,SAdiB,SAAA3B,GACvBA,EAAE4B,iBACsBxC,EAASyC,MAC/B,SAAArB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBa,EAAOd,KAAKC,aAA/C,IAGPoB,MAAM,IAAD,OAAKP,EAAOd,KAAZ,+BAELb,GAASmC,EAAAA,EAAAA,IAAWR,IACpBC,EAAU,CAAEf,KAAM,GAAII,OAAQ,KAEjC,EAGC,WACE,uCACA,iBAAKG,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAlB,qBACA,kBACED,UAAWC,EACXF,KAAK,OACLN,KAAK,OACLS,MAAOK,EAAOd,KACdU,SAAUM,EACVO,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOlB,UAAWC,EAAlB,uBACA,kBACED,UAAWC,EACXF,KAAK,MACLN,KAAK,SACLS,MAAOK,EAAOV,OACdM,SAAUM,EACVO,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQlB,UAAWC,EAAYF,KAAK,SAApC,8BASP,ECjDD,EAdiB,WACf,IAAMxB,GAAYO,EAAAA,EAAAA,IAAYR,GACxBG,GAAQK,EAAAA,EAAAA,IAAYN,GAE1B,OACE,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,IACCD,IAAcE,IAAS,mDACxB,SAAC,EAAD,MAGL,C","sources":["redux/constacts/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, deleteContact } from 'redux/constacts/operations';\nimport { selectContacts, selectFilter } from 'redux/constacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const handleDelete = e => {\n    const id = e.currentTarget.dataset.id;\n    dispatch(deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const contactsFilter = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <ul>\n        {contactsFilter.map(contact => (\n          <li key={contact.id}>\n            {contact.name} : {contact.number}\n            <button onClick={handleDelete} type=\"button\" data-id={contact.id}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  handleDelete: PropTypes.func,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/constacts/filterSlice';\nimport { selectFilter } from 'redux/constacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <h3>Filter</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Search contacts\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactFrom\":\"ContactForm_ContactFrom__A6729\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\n\nconst ContactForm = () => {\n  const [values, setValues] = useState({\n    name: '',\n    number: '',\n  });\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (existingContact) {\n      alert(`\"${values.name}\" in already in contacts.`);\n    } else {\n      dispatch(addContact(values));\n      setValues({ name: '', number: '' });\n    }\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <h1>Phonebook</h1>\n      <div className={css.ContactFrom}>\n        <label className={css.label}>Name: </label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label className={css.label}>Number: </label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={values.number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className={css.button} type=\"submit\">\n          Add Contact\n        </button>\n        {/* <button onClick={handleLog} className={css.button} type=\"button\">\n          LOG\n        </button> */}\n      </div>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  handleNameChange: PropTypes.func,\n  handleNumberChange: PropTypes.func,\n  handleFormSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/constacts/selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useSelector","handleDelete","e","id","currentTarget","dataset","deleteContact","useEffect","getContacts","contactsFilter","contact","name","toLowerCase","includes","map","number","onClick","type","className","css","value","onChange","setFilter","placeholder","useState","values","setValues","handleChange","target","onSubmit","preventDefault","find","alert","addContact","pattern","title","required"],"sourceRoot":""}